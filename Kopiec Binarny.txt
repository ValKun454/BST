#include <iostream>
#include <vector>
#include <algorithm>

using namespace std;

void heapify(vector<int>& arr, int n, int i) {
	int largest = i;
	int left = 2 * i + 1;
	int right = 2 * i + 2;

	if (left < n && arr[left] > arr[largest])
		largest = left;

	if (right < n && arr[right] > arr[largest])
		largest = right;

	if (largest != i) {
		swap(arr[i], arr[largest]);
		heapify(arr, n, largest);
	}
}

void buildHeap(vector<int>& arr) {
	int n = arr.size();

	for (int i = n / 2 - 1; i >= 0; i--)
		heapify(arr, n, i);
}

void heapSort(vector<int>& arr) {
	int n = arr.size();

	buildHeap(arr);

	for (int i = n - 1; i >= 0; i--) {
		swap(arr[0], arr[i]);
		heapify(arr, i, 0);
	}
}

int main() {
	setlocale(LC_ALL, "PL");

	int count;
	cout << "Wprowadź liczbę elementów: ";
	cin >> count;

	
	vector<int> numbers;
	for (int i = 0; i < count; i++) {
		numbers.push_back(rand() % 100 + 1);
	}

	
	cout << "Tablica przed algorytmem: ";
	for (int num : numbers) {
		cout << num << " ";
	}
	cout << endl;

	
	heapSort(numbers);

	cout << "Posortowana tablica: ";
	for (int num : numbers) {
		cout << num << " ";
	}
	cout << endl;

	return 0;
}